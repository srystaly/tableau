<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapAttribution2 />
    <MapboxVectorBuiltInAndUserStyles />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='示例数据 (人工坐席接听数据)' inline='true' name='federated.0l3sgss15ljfof198e3uq0ba5gu7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='人工坐席接听数据' name='excel-direct.1utpczk0mwnxoi16qegpu0pa60ti'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/BaiduSyncdisk/数据分析/tableau学习/tableau配套数据/人工坐席接听数据.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1utpczk0mwnxoi16qegpu0pa60ti' name='示例数据' table='[示例数据$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='string' name='中心' ordinal='0' />
            <column datatype='string' name='部' ordinal='1' />
            <column datatype='string' name='组' ordinal='2' />
            <column datatype='string' name='班' ordinal='3' />
            <column datatype='date' name='日期' ordinal='4' />
            <column datatype='string' name='姓名' ordinal='5' />
            <column datatype='string' name='工号' ordinal='6' />
            <column datatype='integer' name='人工服务接听量' ordinal='7' />
            <column datatype='integer' name='三声铃响接听量' ordinal='8' />
            <column datatype='integer' name='呼入通话时长(秒)' ordinal='9' />
            <column datatype='real' name='平均呼入通话时长(秒)' ordinal='10' />
            <column datatype='integer' name='呼入案头总时长(秒)' ordinal='11' />
            <column datatype='real' name='平均呼入案头时长（秒）' ordinal='12' />
            <column datatype='integer' name='服务评价推送成功数' ordinal='13' />
            <column datatype='real' name='服务评价满意率' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1utpczk0mwnxoi16qegpu0pa60ti' name='示例数据' table='[示例数据$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='string' name='中心' ordinal='0' />
            <column datatype='string' name='部' ordinal='1' />
            <column datatype='string' name='组' ordinal='2' />
            <column datatype='string' name='班' ordinal='3' />
            <column datatype='date' name='日期' ordinal='4' />
            <column datatype='string' name='姓名' ordinal='5' />
            <column datatype='string' name='工号' ordinal='6' />
            <column datatype='integer' name='人工服务接听量' ordinal='7' />
            <column datatype='integer' name='三声铃响接听量' ordinal='8' />
            <column datatype='integer' name='呼入通话时长(秒)' ordinal='9' />
            <column datatype='real' name='平均呼入通话时长(秒)' ordinal='10' />
            <column datatype='integer' name='呼入案头总时长(秒)' ordinal='11' />
            <column datatype='real' name='平均呼入案头时长（秒）' ordinal='12' />
            <column datatype='integer' name='服务评价推送成功数' ordinal='13' />
            <column datatype='real' name='服务评价满意率' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[示例数据]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>中心</remote-name>
            <remote-type>130</remote-type>
            <local-name>[中心]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>中心</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>部</remote-name>
            <remote-type>130</remote-type>
            <local-name>[部]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>部</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>组</remote-name>
            <remote-type>130</remote-type>
            <local-name>[组]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>组</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>班</remote-name>
            <remote-type>130</remote-type>
            <local-name>[班]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>班</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[日期]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>日期</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>姓名</remote-name>
            <remote-type>130</remote-type>
            <local-name>[姓名]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>姓名</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>工号</remote-name>
            <remote-type>130</remote-type>
            <local-name>[工号]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>工号</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>人工服务接听量</remote-name>
            <remote-type>20</remote-type>
            <local-name>[人工服务接听量]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>人工服务接听量</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>三声铃响接听量</remote-name>
            <remote-type>20</remote-type>
            <local-name>[三声铃响接听量]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>三声铃响接听量</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>呼入通话时长(秒)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[呼入通话时长(秒)]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>呼入通话时长(秒)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>平均呼入通话时长(秒)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[平均呼入通话时长(秒)]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>平均呼入通话时长(秒)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>呼入案头总时长(秒)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[呼入案头总时长(秒)]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>呼入案头总时长(秒)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>平均呼入案头时长（秒）</remote-name>
            <remote-type>5</remote-type>
            <local-name>[平均呼入案头时长（秒）]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>平均呼入案头时长（秒）</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>服务评价推送成功数</remote-name>
            <remote-type>20</remote-type>
            <local-name>[服务评价推送成功数]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>服务评价推送成功数</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>服务评价满意率</remote-name>
            <remote-type>5</remote-type>
            <local-name>[服务评价满意率]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>服务评价满意率</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_5F28C1E1A02141C2800B93C867FBB79C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='示例数据' datatype='table' name='[__tableau_internal_object_id__].[示例数据_5F28C1E1A02141C2800B93C867FBB79C]' role='measure' type='quantitative' />
      <column datatype='string' name='[中心]' role='dimension' type='nominal' />
      <column caption='班分组' datatype='string' name='[班 (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[班]' new-bin='true'>
          <bin default-name='false' value='&quot;13班&quot;'>
            <value>&quot;13班&quot;</value>
            <value>&quot;13班（15批新人）&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;15班&quot;'>
            <value>&quot;15班&quot;</value>
            <value>&quot;15期新人&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;常白班&quot;'>
            <value>&quot;常白1班&quot;</value>
            <value>&quot;常白2班&quot;</value>
            <value>&quot;常白3班&quot;</value>
            <value>&quot;常白4班&quot;</value>
            <value>&quot;常白二组&quot;</value>
            <value>&quot;常白一组&quot;</value>
            <value>&quot;常白组&quot;</value>
            <value>&quot;长白班&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;其他班&quot;'>
            <value>&quot;第二组&quot;</value>
            <value>&quot;第三组&quot;</value>
            <value>&quot;第四组&quot;</value>
            <value>&quot;第一组&quot;</value>
            <value>&quot;二组8组&quot;</value>
            <value>&quot;回访&quot;</value>
            <value>&quot;未知&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;运行班&quot;'>
            <value>&quot;运行1班&quot;</value>
            <value>&quot;运行2班&quot;</value>
            <value>&quot;运行3班&quot;</value>
            <value>&quot;运行4班&quot;</value>
            <value>&quot;运行5班&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[班]' role='dimension' type='nominal' />
      <column datatype='string' name='[组]' role='dimension' type='nominal' />
      <column datatype='string' name='[部]' role='dimension' type='nominal' />
      <column-instance column='[中心]' derivation='None' name='[none:中心:nk]' pivot='key' type='nominal' />
      <column-instance column='[班]' derivation='None' name='[none:班:nk]' pivot='key' type='nominal' />
      <column-instance column='[组]' derivation='None' name='[none:组:nk]' pivot='key' type='nominal' />
      <column-instance column='[部]' derivation='None' name='[none:部:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[排除(中心,班,组,部)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:中心:nk]' />
          <groupfilter function='level-members' level='[none:班:nk]' />
          <groupfilter function='level-members' level='[none:组:nk]' />
          <groupfilter function='level-members' level='[none:部:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[班 (组)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;13班&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;运行班&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;其他班&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;其他&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;常白班&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15班&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='示例数据' id='示例数据_5F28C1E1A02141C2800B93C867FBB79C'>
            <properties context=''>
              <relation connection='excel-direct.1utpczk0mwnxoi16qegpu0pa60ti' name='示例数据' table='[示例数据$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='中心' ordinal='0' />
                  <column datatype='string' name='部' ordinal='1' />
                  <column datatype='string' name='组' ordinal='2' />
                  <column datatype='string' name='班' ordinal='3' />
                  <column datatype='date' name='日期' ordinal='4' />
                  <column datatype='string' name='姓名' ordinal='5' />
                  <column datatype='string' name='工号' ordinal='6' />
                  <column datatype='integer' name='人工服务接听量' ordinal='7' />
                  <column datatype='integer' name='三声铃响接听量' ordinal='8' />
                  <column datatype='integer' name='呼入通话时长(秒)' ordinal='9' />
                  <column datatype='real' name='平均呼入通话时长(秒)' ordinal='10' />
                  <column datatype='integer' name='呼入案头总时长(秒)' ordinal='11' />
                  <column datatype='real' name='平均呼入案头时长（秒）' ordinal='12' />
                  <column datatype='integer' name='服务评价推送成功数' ordinal='13' />
                  <column datatype='real' name='服务评价满意率' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='示例数据 (2014年各省市售电量)' inline='true' name='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2014年各省市售电量' name='excel-direct.15lbzyu1ndvatr1grstif1ibrfkt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/BaiduSyncdisk/数据分析/tableau学习/tableau配套数据/2014年各省市售电量.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15lbzyu1ndvatr1grstif1ibrfkt' name='示例数据' table='[示例数据$]' type='table'>
          <columns gridOrigin='A1:I7424:no:A1:I7424:0' header='yes' outcome='2'>
            <column datatype='string' name='省市' ordinal='0' />
            <column datatype='string' name='地市' ordinal='1' />
            <column datatype='date' name='统计周期' ordinal='2' />
            <column datatype='string' name='用电类别' ordinal='3' />
            <column datatype='real' name='当期值' ordinal='4' />
            <column datatype='real' name='累计值' ordinal='5' />
            <column datatype='real' name='同期值' ordinal='6' />
            <column datatype='real' name='同期累计值' ordinal='7' />
            <column datatype='real' name='月度计划值' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15lbzyu1ndvatr1grstif1ibrfkt' name='示例数据' table='[示例数据$]' type='table'>
          <columns gridOrigin='A1:I7424:no:A1:I7424:0' header='yes' outcome='2'>
            <column datatype='string' name='省市' ordinal='0' />
            <column datatype='string' name='地市' ordinal='1' />
            <column datatype='date' name='统计周期' ordinal='2' />
            <column datatype='string' name='用电类别' ordinal='3' />
            <column datatype='real' name='当期值' ordinal='4' />
            <column datatype='real' name='累计值' ordinal='5' />
            <column datatype='real' name='同期值' ordinal='6' />
            <column datatype='real' name='同期累计值' ordinal='7' />
            <column datatype='real' name='月度计划值' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[示例数据]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I7424:no:A1:I7424:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>省市</remote-name>
            <remote-type>130</remote-type>
            <local-name>[省市]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>省市</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>地市</remote-name>
            <remote-type>130</remote-type>
            <local-name>[地市]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>地市</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>统计周期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[统计周期]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>统计周期</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>用电类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[用电类别]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>用电类别</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>当期值</remote-name>
            <remote-type>5</remote-type>
            <local-name>[当期值]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>当期值</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>累计值</remote-name>
            <remote-type>5</remote-type>
            <local-name>[累计值]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>累计值</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>同期值</remote-name>
            <remote-type>5</remote-type>
            <local-name>[同期值]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>同期值</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>同期累计值</remote-name>
            <remote-type>5</remote-type>
            <local-name>[同期累计值]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>同期累计值</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>月度计划值</remote-name>
            <remote-type>5</remote-type>
            <local-name>[月度计划值]</local-name>
            <parent-name>[示例数据]</parent-name>
            <remote-alias>月度计划值</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[示例数据_601AFB68325D4494A55A371D82C16279]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='示例数据' datatype='table' name='[__tableau_internal_object_id__].[示例数据_601AFB68325D4494A55A371D82C16279]' role='measure' type='quantitative' />
      <column datatype='string' name='[地市]' role='dimension' semantic-role='' type='nominal' />
      <column caption='中国地理区域' datatype='string' name='[省市 (组)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[省市]' new-bin='true'>
          <bin default-name='false' value='&quot;东北&quot;'>
            <value>&quot;吉林&quot;</value>
            <value>&quot;辽宁&quot;</value>
            <value>&quot;龙江&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;华北&quot;'>
            <value>&quot;北京&quot;</value>
            <value>&quot;河北&quot;</value>
            <value>&quot;冀北&quot;</value>
            <value>&quot;蒙东&quot;</value>
            <value>&quot;山西&quot;</value>
            <value>&quot;天津&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;华东&quot;'>
            <value>&quot;安徽&quot;</value>
            <value>&quot;福建&quot;</value>
            <value>&quot;江苏&quot;</value>
            <value>&quot;江西&quot;</value>
            <value>&quot;山东&quot;</value>
            <value>&quot;上海&quot;</value>
            <value>&quot;浙江&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;华中&quot;'>
            <value>&quot;河南&quot;</value>
            <value>&quot;湖北&quot;</value>
            <value>&quot;湖南&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;西北&quot;'>
            <value>&quot;甘肃&quot;</value>
            <value>&quot;宁夏&quot;</value>
            <value>&quot;青海&quot;</value>
            <value>&quot;新疆&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;西南&quot;'>
            <value>&quot;重庆&quot;</value>
            <value>&quot;四川&quot;</value>
            <value>&quot;西藏&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[省市]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;冀北&quot;' value='&quot;河北省&quot;' />
          <semantic-value key='&quot;龙江&quot;' value='&quot;黑龙江省&quot;' />
          <semantic-value key='&quot;蒙东&quot;' value='&quot;内蒙古&quot;' />
        </semantic-values>
      </column>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[省市 (组)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;东北&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;西南&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;华中&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;华北&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;西北&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;华东&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;中国&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='示例数据' id='示例数据_601AFB68325D4494A55A371D82C16279'>
            <properties context=''>
              <relation connection='excel-direct.15lbzyu1ndvatr1grstif1ibrfkt' name='示例数据' table='[示例数据$]' type='table'>
                <columns gridOrigin='A1:I7424:no:A1:I7424:0' header='yes' outcome='2'>
                  <column datatype='string' name='省市' ordinal='0' />
                  <column datatype='string' name='地市' ordinal='1' />
                  <column datatype='date' name='统计周期' ordinal='2' />
                  <column datatype='string' name='用电类别' ordinal='3' />
                  <column datatype='real' name='当期值' ordinal='4' />
                  <column datatype='real' name='累计值' ordinal='5' />
                  <column datatype='real' name='同期值' ordinal='6' />
                  <column datatype='real' name='同期累计值' ordinal='7' />
                  <column datatype='real' name='月度计划值' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='订单+ (全球超市订单数据)' inline='true' name='federated.135nlsc00p7sqk16eu5xo11acjjf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='全球超市订单数据' name='excel-direct.0nge4op1yimna41bbu57j1wwmcea'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/BaiduSyncdisk/数据分析/tableau学习/tableau配套数据/全球超市订单数据.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0nge4op1yimna41bbu57j1wwmcea' name='人员' table='[人员$]' type='table'>
          <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='6'>
            <column datatype='string' name='珀森' ordinal='0' />
            <column datatype='string' name='地区' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0nge4op1yimna41bbu57j1wwmcea' name='订单' table='[订单$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='行 ID' ordinal='0' />
              <column datatype='string' name='订单 ID' ordinal='1' />
              <column datatype='date' name='订购日期' ordinal='2' />
              <column datatype='date' name='装运日期' ordinal='3' />
              <column datatype='string' name='装运方式' ordinal='4' />
              <column datatype='string' name='客户 ID' ordinal='5' />
              <column datatype='string' name='客户名称' ordinal='6' />
              <column datatype='string' name='细分市场' ordinal='7' />
              <column datatype='integer' name='邮政编码 (Postal Code)' ordinal='8' />
              <column datatype='string' name='城市 (City)' ordinal='9' />
              <column datatype='string' name='省/市/自治区 (State/Province)' ordinal='10' />
              <column datatype='string' name='国家/地区 (Country)' ordinal='11' />
              <column datatype='string' name='地区' ordinal='12' />
              <column datatype='string' name='市场' ordinal='13' />
              <column datatype='string' name='产品 ID' ordinal='14' />
              <column datatype='string' name='类别' ordinal='15' />
              <column datatype='string' name='子类别' ordinal='16' />
              <column datatype='string' name='产品名称' ordinal='17' />
              <column datatype='real' name='销售额' ordinal='18' />
              <column datatype='integer' name='数量' ordinal='19' />
              <column datatype='real' name='折扣' ordinal='20' />
              <column datatype='real' name='利润' ordinal='21' />
              <column datatype='real' name='装运成本' ordinal='22' />
              <column datatype='string' name='订单优先级' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nge4op1yimna41bbu57j1wwmcea' name='人员' table='[人员$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='6'>
              <column datatype='string' name='珀森' ordinal='0' />
              <column datatype='string' name='地区' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[产品 ID]' value='[订单].[产品 ID]' />
          <map key='[产品名称]' value='[订单].[产品名称]' />
          <map key='[利润]' value='[订单].[利润]' />
          <map key='[国家/地区 (Country)]' value='[订单].[国家/地区 (Country)]' />
          <map key='[地区 (人员)]' value='[人员].[地区]' />
          <map key='[地区]' value='[订单].[地区]' />
          <map key='[城市 (City)]' value='[订单].[城市 (City)]' />
          <map key='[子类别]' value='[订单].[子类别]' />
          <map key='[客户 ID]' value='[订单].[客户 ID]' />
          <map key='[客户名称]' value='[订单].[客户名称]' />
          <map key='[市场]' value='[订单].[市场]' />
          <map key='[折扣]' value='[订单].[折扣]' />
          <map key='[数量]' value='[订单].[数量]' />
          <map key='[珀森]' value='[人员].[珀森]' />
          <map key='[省/市/自治区 (State/Province)]' value='[订单].[省/市/自治区 (State/Province)]' />
          <map key='[类别]' value='[订单].[类别]' />
          <map key='[细分市场]' value='[订单].[细分市场]' />
          <map key='[行 ID]' value='[订单].[行 ID]' />
          <map key='[装运成本]' value='[订单].[装运成本]' />
          <map key='[装运方式]' value='[订单].[装运方式]' />
          <map key='[装运日期]' value='[订单].[装运日期]' />
          <map key='[订单 ID]' value='[订单].[订单 ID]' />
          <map key='[订单优先级]' value='[订单].[订单优先级]' />
          <map key='[订购日期]' value='[订单].[订购日期]' />
          <map key='[邮政编码 (Postal Code)]' value='[订单].[邮政编码 (Postal Code)]' />
          <map key='[销售额]' value='[订单].[销售额]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[订单]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[人员]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>行 ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[行 ID]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>行 ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单 ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[订单 ID]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>订单 ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订购日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[订购日期]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>订购日期</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>装运日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[装运日期]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>装运日期</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>装运方式</remote-name>
            <remote-type>130</remote-type>
            <local-name>[装运方式]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>装运方式</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>客户 ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[客户 ID]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>客户 ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>客户名称</remote-name>
            <remote-type>130</remote-type>
            <local-name>[客户名称]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>客户名称</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>细分市场</remote-name>
            <remote-type>130</remote-type>
            <local-name>[细分市场]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>细分市场</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>邮政编码 (Postal Code)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[邮政编码 (Postal Code)]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>邮政编码 (Postal Code)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>城市 (City)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[城市 (City)]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>城市 (City)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>省/市/自治区 (State/Province)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[省/市/自治区 (State/Province)]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>省/市/自治区 (State/Province)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>国家/地区 (Country)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[国家/地区 (Country)]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>国家/地区 (Country)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>地区</remote-name>
            <remote-type>130</remote-type>
            <local-name>[地区]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>地区</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>市场</remote-name>
            <remote-type>130</remote-type>
            <local-name>[市场]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>市场</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品 ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品 ID]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>产品 ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[类别]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>类别</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>子类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[子类别]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>子类别</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品名称</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品名称]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>产品名称</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>销售额</remote-name>
            <remote-type>5</remote-type>
            <local-name>[销售额]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>销售额</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>数量</remote-name>
            <remote-type>20</remote-type>
            <local-name>[数量]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>数量</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>折扣</remote-name>
            <remote-type>5</remote-type>
            <local-name>[折扣]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>折扣</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>利润</remote-name>
            <remote-type>5</remote-type>
            <local-name>[利润]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>利润</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>装运成本</remote-name>
            <remote-type>5</remote-type>
            <local-name>[装运成本]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>装运成本</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单优先级</remote-name>
            <remote-type>130</remote-type>
            <local-name>[订单优先级]</local-name>
            <parent-name>[订单]</parent-name>
            <remote-alias>订单优先级</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[订单_835F1651D66443ECB36E15D424304AB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>珀森</remote-name>
            <remote-type>130</remote-type>
            <local-name>[珀森]</local-name>
            <parent-name>[人员]</parent-name>
            <remote-alias>珀森</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[人员_8B4A809BC94C4B6F990F08F6AB867154]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>地区</remote-name>
            <remote-type>130</remote-type>
            <local-name>[地区 (人员)]</local-name>
            <parent-name>[人员]</parent-name>
            <remote-alias>地区</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[人员_8B4A809BC94C4B6F990F08F6AB867154]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='人员' datatype='table' name='[__tableau_internal_object_id__].[人员_8B4A809BC94C4B6F990F08F6AB867154]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='订单' datatype='table' name='[__tableau_internal_object_id__].[订单_835F1651D66443ECB36E15D424304AB7]' role='measure' type='quantitative' />
      <column caption='产品 Id' datatype='string' name='[产品 ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[产品名称]' role='dimension' type='nominal' />
      <column datatype='real' name='[利润]' role='measure' type='quantitative' />
      <column datatype='string' name='[国家/地区 (Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[地区]' role='dimension' type='nominal' />
      <column datatype='string' name='[城市 (City)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='客户 Id' datatype='string' name='[客户 ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[市场]' role='dimension' type='nominal' />
      <column datatype='integer' name='[数量]' role='measure' type='quantitative' />
      <column datatype='string' name='[省/市/自治区 (State/Province)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[细分市场]' role='dimension' type='nominal' />
      <column caption='行 Id' datatype='integer' name='[行 ID]' role='dimension' type='ordinal' />
      <column caption='订单 Id' datatype='string' name='[订单 ID]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[邮政编码 (Postal Code)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[地区]' derivation='None' name='[none:地区:nk]' pivot='key' type='nominal' />
      <group caption='亚洲地区' name='[亚洲地区]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:地区:nk]' member='&quot;东亚&quot;' />
          <groupfilter function='member' level='[none:地区:nk]' member='&quot;南亚&quot;' />
          <groupfilter function='member' level='[none:地区:nk]' member='&quot;西亚&quot;' />
          <groupfilter function='member' level='[none:地区:nk]' member='&quot;中亚&quot;' />
        </groupfilter>
      </group>
      <group caption='产品销量动态数据集' name='[产品名称 集]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([数量])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[产品名称]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='负利润国家' name='[国家/地区 (Country) 集]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿根廷&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿拉伯联合酋长国&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;爱尔兰&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴布亚新几内亚&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴基斯坦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴拿马&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;丹麦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;多米尼加共和国&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;菲律宾&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;哈萨克斯坦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;海地&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;韩国&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;荷兰&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;洪都拉斯&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;津巴布韦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;老挝&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;立陶宛&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;秘鲁&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;缅甸&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;尼日利亚&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;葡萄牙&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;瑞典&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;塞浦路斯&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;塔吉克斯坦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;泰国&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土耳其&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土库曼斯坦&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;委内瑞拉&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;乌干达&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;也门&quot;' />
          <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;越南&quot;' />
        </groupfilter>
      </group>
      <group caption='负利润产品' name='[负利润产品]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([利润]) &lt;= 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[产品名称]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='负利润国家集2' name='[集 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[细分市场]' member='&quot;公司&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;非洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;津巴布韦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;尼日利亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;乌干达&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;拉丁美洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿根廷&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴拿马&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;多米尼加共和国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;海地&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;洪都拉斯&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;秘鲁&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;委内瑞拉&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;欧洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;爱尔兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;丹麦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;荷兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;立陶宛&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;葡萄牙&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;瑞典&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;亚太地区&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿拉伯联合酋长国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴布亚新几内亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴基斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;菲律宾&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;哈萨克斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;韩国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;缅甸&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;泰国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土耳其&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土库曼斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;也门&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;越南&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[细分市场]' member='&quot;家庭办公室&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;非洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;津巴布韦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;尼日利亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;乌干达&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;拉丁美洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿根廷&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴拿马&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;多米尼加共和国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;海地&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;洪都拉斯&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;秘鲁&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;委内瑞拉&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;欧洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;爱尔兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;丹麦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;荷兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;立陶宛&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;葡萄牙&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;瑞典&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;塞浦路斯&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;亚太地区&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴布亚新几内亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴基斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;菲律宾&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;哈萨克斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;韩国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;缅甸&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;泰国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土耳其&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土库曼斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;也门&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;越南&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[细分市场]' member='&quot;消费者&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;非洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;津巴布韦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;尼日利亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;乌干达&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;拉丁美洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿根廷&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴拿马&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;多米尼加共和国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;海地&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;洪都拉斯&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;秘鲁&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;委内瑞拉&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;欧洲&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;爱尔兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;丹麦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;荷兰&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;立陶宛&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;葡萄牙&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;瑞典&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[市场]' member='&quot;亚太地区&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;阿拉伯联合酋长国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴布亚新几内亚&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;巴基斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;菲律宾&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;哈萨克斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;韩国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;老挝&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;缅甸&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;塔吉克斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;泰国&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土耳其&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;土库曼斯坦&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;也门&quot;' />
                    <groupfilter function='member' level='[国家/地区 (Country)]' member='&quot;越南&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[国家/地区 (Country)]' />
            <hierarchy name='[市场]' />
            <hierarchy name='[细分市场]' />
          </order>
        </groupfilter>
      </group>
      <group caption='卖情怀产品' delimiter=',' name='[集 2]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[负利润产品]' function='reference' />
          <groupfilter field='[产品名称 集]' function='reference' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='亚洲市场'>
          <field>[地区]</field>
          <field>[亚洲地区]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='人员' id='人员_8B4A809BC94C4B6F990F08F6AB867154'>
            <properties context=''>
              <relation connection='excel-direct.0nge4op1yimna41bbu57j1wwmcea' name='人员' table='[人员$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='6'>
                  <column datatype='string' name='珀森' ordinal='0' />
                  <column datatype='string' name='地区' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='订单' id='订单_835F1651D66443ECB36E15D424304AB7'>
            <properties context=''>
              <relation connection='excel-direct.0nge4op1yimna41bbu57j1wwmcea' name='订单' table='[订单$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='行 ID' ordinal='0' />
                  <column datatype='string' name='订单 ID' ordinal='1' />
                  <column datatype='date' name='订购日期' ordinal='2' />
                  <column datatype='date' name='装运日期' ordinal='3' />
                  <column datatype='string' name='装运方式' ordinal='4' />
                  <column datatype='string' name='客户 ID' ordinal='5' />
                  <column datatype='string' name='客户名称' ordinal='6' />
                  <column datatype='string' name='细分市场' ordinal='7' />
                  <column datatype='integer' name='邮政编码 (Postal Code)' ordinal='8' />
                  <column datatype='string' name='城市 (City)' ordinal='9' />
                  <column datatype='string' name='省/市/自治区 (State/Province)' ordinal='10' />
                  <column datatype='string' name='国家/地区 (Country)' ordinal='11' />
                  <column datatype='string' name='地区' ordinal='12' />
                  <column datatype='string' name='市场' ordinal='13' />
                  <column datatype='string' name='产品 ID' ordinal='14' />
                  <column datatype='string' name='类别' ordinal='15' />
                  <column datatype='string' name='子类别' ordinal='16' />
                  <column datatype='string' name='产品名称' ordinal='17' />
                  <column datatype='real' name='销售额' ordinal='18' />
                  <column datatype='integer' name='数量' ordinal='19' />
                  <column datatype='real' name='折扣' ordinal='20' />
                  <column datatype='real' name='利润' ordinal='21' />
                  <column datatype='real' name='装运成本' ordinal='22' />
                  <column datatype='string' name='订单优先级' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[地区]' />
              <expression op='[地区 (人员)]' />
            </expression>
            <first-end-point object-id='订单_835F1651D66443ECB36E15D424304AB7' />
            <second-end-point object-id='人员_8B4A809BC94C4B6F990F08F6AB867154' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='M Blue Green' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoidGFibGVhdS1pbnRlcm5hbCIsImEiOiJjaWdtdGJjOXYwMDQ1NnBtM20zcTF2OGUzIn0.lAOHdE3WGiLh_n2a4uXGVA' class='CustomMapbox' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/tableau-internal/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoidGFibGVhdS1pbnRlcm5hbCIsImEiOiJjaWdtdGJjOXYwMDQ1NnBtM20zcTF2OGUzIn0.lAOHdE3WGiLh_n2a4uXGVA' username='tableau-internal' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets' name='cinwd0fem002gb9krp6830uxc' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='' name='mapbox://styles/tableau-internal/cinwd0fem002gb9krp6830uxc' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets' request-string='cinwd0fem002gb9krp6830uxc' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='mapbox://styles/tableau-internal/cinwd0fem002gb9krp6830uxc' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
  </mapsources>
  <worksheets>
    <worksheet name='产品利润动态数据集'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>动态数据集创建，鼠标右键选择表类某一成员创建动态数据集，可比较集内外的数据差异，也可以表示集内部之间数据的差异，此处以产品利润为例</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='订单+ (全球超市订单数据)' name='federated.135nlsc00p7sqk16eu5xo11acjjf' />
          </datasources>
          <datasource-dependencies datasource='federated.135nlsc00p7sqk16eu5xo11acjjf'>
            <column-instance column='[利润]' derivation='Sum' name='[sum:利润:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[产品名称]' role='dimension' type='nominal' />
            <column datatype='real' name='[利润]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.135nlsc00p7sqk16eu5xo11acjjf].[负利润产品]' />
          <slices>
            <column>[federated.135nlsc00p7sqk16eu5xo11acjjf].[负利润产品]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.135nlsc00p7sqk16eu5xo11acjjf].[负利润产品]</rows>
        <cols>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</cols>
      </table>
      <simple-id uuid='{6F0E8DC7-CCDE-44F5-9F0B-32102EE8C894}' />
    </worksheet>
    <worksheet name='产品销量动态数据集'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>右键创建集，可以条件或者顶部底部（其中顶部，则是取top10的数据，底部反之）</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='订单+ (全球超市订单数据)' name='federated.135nlsc00p7sqk16eu5xo11acjjf' />
          </datasources>
          <datasource-dependencies datasource='federated.135nlsc00p7sqk16eu5xo11acjjf'>
            <column-instance column='[产品名称 集]' derivation='InOut' name='[io:产品名称 集:nk]' pivot='key' type='nominal' />
            <column-instance column='[利润]' derivation='Sum' name='[sum:利润:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[产品名称]' role='dimension' type='nominal' />
            <column datatype='real' name='[利润]' role='measure' type='quantitative' />
            <column datatype='integer' name='[数量]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.135nlsc00p7sqk16eu5xo11acjjf].[io:产品名称 集:nk]</rows>
        <cols>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</cols>
      </table>
      <simple-id uuid='{49A88033-790A-4CED-8A65-B35CA5238C01}' />
    </worksheet>
    <worksheet name='分层结构'>
      <table>
        <view>
          <datasources>
            <datasource caption='订单+ (全球超市订单数据)' name='federated.135nlsc00p7sqk16eu5xo11acjjf' />
          </datasources>
          <datasource-dependencies datasource='federated.135nlsc00p7sqk16eu5xo11acjjf'>
            <column-instance column='[订购日期]' derivation='Quarter' name='[qr:订购日期:ok]' pivot='key' type='ordinal' />
            <column-instance column='[利润]' derivation='Sum' name='[sum:利润:qk]' pivot='key' type='quantitative' />
            <column-instance column='[订购日期]' derivation='Year' name='[yr:订购日期:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[利润]' role='measure' type='quantitative' />
            <column datatype='date' name='[订购日期]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</rows>
        <cols>([federated.135nlsc00p7sqk16eu5xo11acjjf].[yr:订购日期:ok] / [federated.135nlsc00p7sqk16eu5xo11acjjf].[qr:订购日期:ok])</cols>
      </table>
      <simple-id uuid='{397BE047-57B1-4D73-B04F-F7F5A9E791A2}' />
    </worksheet>
    <worksheet name='创建及其编辑组别'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>分组可以对数据融合</run>
            <run>Æ&#10;</run>
            <run fontsize='14'>点击条形图，可以创建组，创建之后，左侧表区域可以进行编辑</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (人工坐席接听数据)' name='federated.0l3sgss15ljfof198e3uq0ba5gu7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l3sgss15ljfof198e3uq0ba5gu7'>
            <column-instance column='[人工服务接听量]' derivation='Sum' name='[sum:人工服务接听量:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[人工服务接听量]' role='measure' type='quantitative' />
            <column caption='班分组' datatype='string' name='[班 (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[班]' new-bin='true'>
                <bin default-name='false' value='&quot;13班&quot;'>
                  <value>&quot;13班&quot;</value>
                  <value>&quot;13班（15批新人）&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;15班&quot;'>
                  <value>&quot;15班&quot;</value>
                  <value>&quot;15期新人&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;常白班&quot;'>
                  <value>&quot;常白1班&quot;</value>
                  <value>&quot;常白2班&quot;</value>
                  <value>&quot;常白3班&quot;</value>
                  <value>&quot;常白4班&quot;</value>
                  <value>&quot;常白二组&quot;</value>
                  <value>&quot;常白一组&quot;</value>
                  <value>&quot;常白组&quot;</value>
                  <value>&quot;长白班&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;其他班&quot;'>
                  <value>&quot;第二组&quot;</value>
                  <value>&quot;第三组&quot;</value>
                  <value>&quot;第四组&quot;</value>
                  <value>&quot;第一组&quot;</value>
                  <value>&quot;二组8组&quot;</value>
                  <value>&quot;回访&quot;</value>
                  <value>&quot;未知&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;运行班&quot;'>
                  <value>&quot;运行1班&quot;</value>
                  <value>&quot;运行2班&quot;</value>
                  <value>&quot;运行3班&quot;</value>
                  <value>&quot;运行4班&quot;</value>
                  <value>&quot;运行5班&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[班]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l3sgss15ljfof198e3uq0ba5gu7].[班 (组)]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:人工服务接听量:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:人工服务接听量:qk]</rows>
        <cols>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[班 (组)]</cols>
      </table>
      <simple-id uuid='{BB072578-BA05-4C6B-8165-42CECCB256DE}' />
    </worksheet>
    <worksheet name='右键创造层级（条形图）'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='15'>右键建立分层层级、排在上面的是高层级，反之低层级</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (人工坐席接听数据)' name='federated.0l3sgss15ljfof198e3uq0ba5gu7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l3sgss15ljfof198e3uq0ba5gu7'>
            <column-instance column='[中心]' derivation='None' name='[none:中心:nk]' pivot='key' type='nominal' />
            <column-instance column='[班]' derivation='None' name='[none:班:nk]' pivot='key' type='nominal' />
            <column-instance column='[组]' derivation='None' name='[none:组:nk]' pivot='key' type='nominal' />
            <column-instance column='[部]' derivation='None' name='[none:部:nk]' pivot='key' type='nominal' />
            <column-instance column='[人工服务接听量]' derivation='Sum' name='[sum:人工服务接听量:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[中心]' role='dimension' type='nominal' />
            <column datatype='integer' name='[人工服务接听量]' role='measure' type='quantitative' />
            <column datatype='string' name='[班]' role='dimension' type='nominal' />
            <column datatype='string' name='[组]' role='dimension' type='nominal' />
            <column datatype='string' name='[部]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l3sgss15ljfof198e3uq0ba5gu7].[排除(中心,班,组,部)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:中心:nk]' />
                <groupfilter function='level-members' level='[none:班:nk]' />
                <groupfilter function='level-members' level='[none:组:nk]' />
                <groupfilter function='level-members' level='[none:部:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:中心:nk]' member='&quot;北中心&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:班:nk]' member='&quot;未知&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:组:nk]' member='&quot;客服一组&quot;' />
                    <groupfilter function='member' level='[none:部:nk]' member='&quot;客服一部&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[排除(中心,班,组,部)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:人工服务接听量:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:人工服务接听量:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:人工服务接听量:qk]</rows>
        <cols>([federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:中心:nk] / ([federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:部:nk] / ([federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:组:nk] / [federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:班:nk])))</cols>
      </table>
      <simple-id uuid='{9954A93E-F9AA-456B-8056-14E780F50E7F}' />
    </worksheet>
    <worksheet name='各区域用电量分组的使用'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>华东地区用电量远超其他地区</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (2014年各省市售电量)' name='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji'>
            <column-instance column='[当期值]' derivation='Sum' name='[sum:当期值:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[当期值]' role='measure' type='quantitative' />
            <column caption='中国地理区域' datatype='string' name='[省市 (组)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[省市]' new-bin='true'>
                <bin default-name='false' value='&quot;东北&quot;'>
                  <value>&quot;吉林&quot;</value>
                  <value>&quot;辽宁&quot;</value>
                  <value>&quot;龙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华北&quot;'>
                  <value>&quot;北京&quot;</value>
                  <value>&quot;河北&quot;</value>
                  <value>&quot;冀北&quot;</value>
                  <value>&quot;蒙东&quot;</value>
                  <value>&quot;山西&quot;</value>
                  <value>&quot;天津&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华东&quot;'>
                  <value>&quot;安徽&quot;</value>
                  <value>&quot;福建&quot;</value>
                  <value>&quot;江苏&quot;</value>
                  <value>&quot;江西&quot;</value>
                  <value>&quot;山东&quot;</value>
                  <value>&quot;上海&quot;</value>
                  <value>&quot;浙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华中&quot;'>
                  <value>&quot;河南&quot;</value>
                  <value>&quot;湖北&quot;</value>
                  <value>&quot;湖南&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西北&quot;'>
                  <value>&quot;甘肃&quot;</value>
                  <value>&quot;宁夏&quot;</value>
                  <value>&quot;青海&quot;</value>
                  <value>&quot;新疆&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西南&quot;'>
                  <value>&quot;重庆&quot;</value>
                  <value>&quot;四川&quot;</value>
                  <value>&quot;西藏&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[省市]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;冀北&quot;' value='&quot;河北省&quot;' />
                <semantic-value key='&quot;龙江&quot;' value='&quot;黑龙江省&quot;' />
                <semantic-value key='&quot;蒙东&quot;' value='&quot;内蒙古&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' num-steps='5' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' />
              <text column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' />
              <text column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' />
              <lod column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' />
              <geometry column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]</rows>
        <cols>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2C524D97-E0F4-41C1-B0C1-9FDA145AC15C}' />
    </worksheet>
    <worksheet name='合并集'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>合并集要求同一纬度数据，便于分析。</run>
            <run>Æ&#10;</run>
            <run fontsize='14'>ps：还可以通过筛选器，筛选创建集，便于使用，避免下一次再进行筛选</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='订单+ (全球超市订单数据)' name='federated.135nlsc00p7sqk16eu5xo11acjjf' />
          </datasources>
          <datasource-dependencies datasource='federated.135nlsc00p7sqk16eu5xo11acjjf'>
            <column-instance column='[利润]' derivation='Sum' name='[sum:利润:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[产品名称]' role='dimension' type='nominal' />
            <column datatype='real' name='[利润]' role='measure' type='quantitative' />
            <column datatype='integer' name='[数量]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.135nlsc00p7sqk16eu5xo11acjjf].[集 2]' />
          <slices>
            <column>[federated.135nlsc00p7sqk16eu5xo11acjjf].[集 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.135nlsc00p7sqk16eu5xo11acjjf].[集 2]</rows>
        <cols>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</cols>
      </table>
      <simple-id uuid='{9D624C28-9D9C-4BA4-AB62-26525008C12B}' />
    </worksheet>
    <worksheet name='地图分组'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>地图上，按住鼠标左键，框选多个点，进行分组，随后编辑即可</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (2014年各省市售电量)' name='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji'>
            <column-instance column='[省市]' derivation='None' name='[none:省市:nk]' pivot='key' type='nominal' />
            <column-instance column='[当期值]' derivation='Sum' name='[sum:当期值:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[当期值]' role='measure' type='quantitative' />
            <column caption='中国地理区域' datatype='string' name='[省市 (组)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[省市]' new-bin='true'>
                <bin default-name='false' value='&quot;东北&quot;'>
                  <value>&quot;吉林&quot;</value>
                  <value>&quot;辽宁&quot;</value>
                  <value>&quot;龙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华北&quot;'>
                  <value>&quot;北京&quot;</value>
                  <value>&quot;河北&quot;</value>
                  <value>&quot;冀北&quot;</value>
                  <value>&quot;蒙东&quot;</value>
                  <value>&quot;山西&quot;</value>
                  <value>&quot;天津&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华东&quot;'>
                  <value>&quot;安徽&quot;</value>
                  <value>&quot;福建&quot;</value>
                  <value>&quot;江苏&quot;</value>
                  <value>&quot;江西&quot;</value>
                  <value>&quot;山东&quot;</value>
                  <value>&quot;上海&quot;</value>
                  <value>&quot;浙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华中&quot;'>
                  <value>&quot;河南&quot;</value>
                  <value>&quot;湖北&quot;</value>
                  <value>&quot;湖南&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西北&quot;'>
                  <value>&quot;甘肃&quot;</value>
                  <value>&quot;宁夏&quot;</value>
                  <value>&quot;青海&quot;</value>
                  <value>&quot;新疆&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西南&quot;'>
                  <value>&quot;重庆&quot;</value>
                  <value>&quot;四川&quot;</value>
                  <value>&quot;西藏&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[省市]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;冀北&quot;' value='&quot;河北省&quot;' />
                <semantic-value key='&quot;龙江&quot;' value='&quot;黑龙江省&quot;' />
                <semantic-value key='&quot;蒙东&quot;' value='&quot;内蒙古&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]' field-type='quantitative' max='15406175.715671765' min='8834299.6508766357' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]' field-type='quantitative' max='5644706.7774036173' min='2423347.9459694522' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' />
              <text column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]' />
              <lod column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]' />
              <color column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Latitude (generated)]</rows>
        <cols>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{96FCC632-8D24-4D43-B678-747DE627F918}' />
    </worksheet>
    <worksheet name='拖放创建层级（折线图）'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='18'>拖放、将低层级托向高层级，随后右键可以添加（或者拖放）</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (人工坐席接听数据)' name='federated.0l3sgss15ljfof198e3uq0ba5gu7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l3sgss15ljfof198e3uq0ba5gu7'>
            <column-instance column='[日期]' derivation='Day' name='[dy:日期:ok]' pivot='key' type='ordinal' />
            <column-instance column='[中心]' derivation='None' name='[none:中心:nk]' pivot='key' type='nominal' />
            <column-instance column='[组]' derivation='None' name='[none:组:nk]' pivot='key' type='nominal' />
            <column-instance column='[部]' derivation='None' name='[none:部:nk]' pivot='key' type='nominal' />
            <column-instance column='[平均呼入通话时长(秒)]' derivation='Sum' name='[sum:平均呼入通话时长(秒):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[中心]' role='dimension' type='nominal' />
            <column datatype='real' name='[平均呼入通话时长(秒)]' role='measure' type='quantitative' />
            <column datatype='date' name='[日期]' role='dimension' type='ordinal' />
            <column datatype='string' name='[组]' role='dimension' type='nominal' />
            <column datatype='string' name='[部]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:中心:nk] / ([federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:部:nk] / [federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:组:nk])) * [federated.0l3sgss15ljfof198e3uq0ba5gu7].[sum:平均呼入通话时长(秒):qk])</rows>
        <cols>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[dy:日期:ok]</cols>
      </table>
      <simple-id uuid='{A6FA710B-8683-47EC-9666-930E5CE162D5}' />
    </worksheet>
    <worksheet name='电量销售区域标靶图'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>按区域分，西南地区总体电量销售情况最好</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='示例数据 (2014年各省市售电量)' name='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji' />
          </datasources>
          <datasource-dependencies datasource='federated.0mii3rk1vuhjrv1gtxh8i0jkfnji'>
            <column-instance column='[省市]' derivation='None' name='[none:省市:nk]' pivot='key' type='nominal' />
            <column-instance column='[当期值]' derivation='Sum' name='[sum:当期值:qk]' pivot='key' type='quantitative' />
            <column-instance column='[月度计划值]' derivation='Sum' name='[sum:月度计划值:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[当期值]' role='measure' type='quantitative' />
            <column datatype='real' name='[月度计划值]' role='measure' type='quantitative' />
            <column caption='中国地理区域' datatype='string' name='[省市 (组)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[省市]' new-bin='true'>
                <bin default-name='false' value='&quot;东北&quot;'>
                  <value>&quot;吉林&quot;</value>
                  <value>&quot;辽宁&quot;</value>
                  <value>&quot;龙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华北&quot;'>
                  <value>&quot;北京&quot;</value>
                  <value>&quot;河北&quot;</value>
                  <value>&quot;冀北&quot;</value>
                  <value>&quot;蒙东&quot;</value>
                  <value>&quot;山西&quot;</value>
                  <value>&quot;天津&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华东&quot;'>
                  <value>&quot;安徽&quot;</value>
                  <value>&quot;福建&quot;</value>
                  <value>&quot;江苏&quot;</value>
                  <value>&quot;江西&quot;</value>
                  <value>&quot;山东&quot;</value>
                  <value>&quot;上海&quot;</value>
                  <value>&quot;浙江&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;华中&quot;'>
                  <value>&quot;河南&quot;</value>
                  <value>&quot;湖北&quot;</value>
                  <value>&quot;湖南&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西北&quot;'>
                  <value>&quot;甘肃&quot;</value>
                  <value>&quot;宁夏&quot;</value>
                  <value>&quot;青海&quot;</value>
                  <value>&quot;新疆&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;西南&quot;'>
                  <value>&quot;重庆&quot;</value>
                  <value>&quot;四川&quot;</value>
                  <value>&quot;西藏&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[省市]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;冀北&quot;' value='&quot;河北省&quot;' />
                <semantic-value key='&quot;龙江&quot;' value='&quot;黑龙江省&quot;' />
                <semantic-value key='&quot;蒙东&quot;' value='&quot;内蒙古&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='palette' id='refline0' value='' />
            <format attr='fill-color' id='refline0' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' />
              <text column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' />
              <lod column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:月度计划值:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' enable-instant-analytics='false' fill-above='false' fill-below='false' formula='average' id='refline0' label-type='none' percentage-bands='true' probability='95' scope='per-pane' symmetric='false' value-column='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:月度计划值:qk]' z-order='1'>
              <reference-line-value percentage='50' />
              <reference-line-value percentage='100' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)] / [federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk])</rows>
        <cols>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]</cols>
      </table>
      <simple-id uuid='{8C85A075-6A32-4BF3-94CF-EF152E321B5B}' />
    </worksheet>
    <worksheet name='负利润国家静态数据集'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>类似于组的创建方式，同理框选多个需要的目标数据，进行分集</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='订单+ (全球超市订单数据)' name='federated.135nlsc00p7sqk16eu5xo11acjjf' />
          </datasources>
          <datasource-dependencies datasource='federated.135nlsc00p7sqk16eu5xo11acjjf'>
            <column-instance column='[国家/地区 (Country)]' derivation='None' name='[none:国家/地区 (Country):nk]' pivot='key' type='nominal' />
            <column-instance column='[市场]' derivation='None' name='[none:市场:nk]' pivot='key' type='nominal' />
            <column-instance column='[细分市场]' derivation='None' name='[none:细分市场:nk]' pivot='key' type='nominal' />
            <column-instance column='[利润]' derivation='Sum' name='[sum:利润:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[利润]' role='measure' type='quantitative' />
            <column datatype='string' name='[国家/地区 (Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[市场]' role='dimension' type='nominal' />
            <column datatype='string' name='[细分市场]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.135nlsc00p7sqk16eu5xo11acjjf].[none:国家/地区 (Country):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</rows>
        <cols>([federated.135nlsc00p7sqk16eu5xo11acjjf].[none:市场:nk] / ([federated.135nlsc00p7sqk16eu5xo11acjjf].[none:细分市场:nk] / [federated.135nlsc00p7sqk16eu5xo11acjjf].[none:国家/地区 (Country):nk]))</cols>
      </table>
      <simple-id uuid='{263D225E-74C0-43E5-9243-2AA5E3B9240E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='分层结构'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[yr:订购日期:ok]</field>
                    <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[qr:订购日期:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[qr:订购日期:ok]</field>
                  <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]</field>
                  <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[yr:订购日期:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>43394.651380000032</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[yr:订购日期:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCA439E3-4168-4BE7-8015-D1418CD7BF45}' />
    </window>
    <window class='worksheet' name='右键创造层级（条形图）'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:中心:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46C0B10D-37CD-4244-B89F-AAFF43F30C65}' />
    </window>
    <window class='worksheet' name='拖放创建层级（折线图）'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:中心:nk]</field>
            <field>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[yr:日期:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{329745BB-6E95-4259-9DF9-EAF9444CB695}' />
    </window>
    <window class='worksheet' name='创建及其编辑组别'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[none:班:nk]</field>
            <field>[federated.0l3sgss15ljfof198e3uq0ba5gu7].[班 (组)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2E8FC28-0CDD-4E1C-ABC4-9BAD703DFF0F}' />
    </window>
    <window class='worksheet' name='地图分组'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' type='color' />
            <card pane-specification-id='0' param='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' type='size' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]</field>
            <field>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[yr:统计周期:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{58176E70-E809-4034-B71F-2CD1B193DAAC}' />
    </window>
    <window class='worksheet' name='各区域用电量分组的使用'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BE635AF-B560-45E6-AA84-B79DFAAAC9DE}' />
    </window>
    <window class='worksheet' name='电量销售区域标靶图'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[sum:当期值:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[none:省市:nk]</field>
            <field>[federated.0mii3rk1vuhjrv1gtxh8i0jkfnji].[省市 (组)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A62D59F-2FE9-4D7A-9232-8A85421013AF}' />
    </window>
    <window class='worksheet' name='负利润国家静态数据集'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.135nlsc00p7sqk16eu5xo11acjjf].[sum:利润:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[none:国家/地区 (Country):nk]</field>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[none:市场:nk]</field>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[none:细分市场:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A07EDAC3-EE46-4605-A148-6A898EFA6FE5}' />
    </window>
    <window class='worksheet' name='产品利润动态数据集'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[io:负利润产品:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A912BBA2-03B3-44CC-8337-EF84C09196F5}' />
    </window>
    <window class='worksheet' name='产品销量动态数据集'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[io:产品名称 集:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1EADAE1-230D-4A59-8756-9281147AB97D}' />
    </window>
    <window class='worksheet' maximized='true' name='合并集'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[io:集 2:nk]</field>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[none:地区:nk]</field>
            <field>[federated.135nlsc00p7sqk16eu5xo11acjjf].[集 2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEB9FBDA-7CA8-4951-8D99-9877128AF439}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='产品利润动态数据集' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9x5cjV56o94WHdwkkEmnLZDmS3ezuMU/zZiMtdHS00UJHf6cW2kiaeXqj
      JzP9zpsz0+wmWZUOQAJIeO/CR1wtkJWsZBbJ6ibLqeLbsBKI+CFweX+B+8V1khBCEBHxiSK/
      7wuIiHifRAkQ8UkTJUDEJ02UABGfNFECRHzSfBQJIITg5zysepsPun7utb1J/LfJpx7/JgGE
      EIRheBPwp/4GME3z5cl3LuR1x//Qhb/JsT/niwZB8Bef+77jf8zX/jHEv0mAQfeK89MXVBsd
      AK4uLzg7v2BpOggh+OaP/8ZFtcpyucYPYbVa0bysU79sEiIYDse41orLZhsBvPj2j1SrVRam
      zaB7xWxpEvoul/VLHMfiH/7hHxiMZwgR8PVX/8Z5tYbrB7Qal1iu/7O+VETEm3KTALlcjsVs
      QiKdBaDb70PoMZsvCQMLNZbj8aNH2OMOKx8uG3U8P2C7kOC83mI+nXF2XqdSLm4CXt/V7fmA
      ha9zVb/g5OyM7XKRar3N7v4e21s5fGuFni3x5NExw2aVRH6bi9PT91IYEZ8e1wkgsByfL3/7
      W0a9NvP5nGQyzcHhEfPZFFk2sMw5jmPhhwLHNlmbDpquE/g+iqoCEpIkEYYhAGosyZMnT0gn
      DEQYIgAJbt4XYUgQhKhGHHM+xbYtglAQhpuftPl8jmetMR3v3ZdKxCeD9HIoxHI2ZjhdcXR0
      yHq1JJ1K0Gi2OTg8RJElXHtNuzfmYL9Cu90lv7UFnsXM9DnYK2ObNooc0h8v2d/bwbYs4vE4
      IBj1u2jJPOm4ytVVl72DA6zlFDtUKeYzOOaK7nDKwcEevfYVW+VdXNskrqv4so6hbvJUlv8y
      Z/d9H1VVf7FCexUhBEEQvLX4b/Pao/ivJMBLXgqpLMs34ilJMpL08j2BLG/u9t8/b3Ps7dd/
      CCEEIgyRZPnmHMc0UeMJlO+FePmrESVAFP+Xjn/nzNl4wGg6w/EVPHNMIplGiWU4vrfH86+/
      QoslKJa2SaSy+I6JFHoM5xaGM+JkLPj3v/2MXqfN7sEhq+mItRuC71Cq7DMbdlDiWYr5DI2L
      U+xQZru8g2HoSIHPuN/GkmMc7O4SN7SfVTAREW/CnVtqLpdjvZyjx5MkM3mePH2Gay0BSCUT
      2K6PocvU6k1azRYXF1VihkEml+fg8D6t2imZfI7z8wsarT6rUZ9UNk2jcUn9qo+mKgAsXZ+n
      Tx5TSCpc9ce06w2cIGCrtM352fm7LYWIT5Y7CbBYWXz+xZeY8yFCCMzljFDa3I3TuRL3d3O0
      BxbYY/RElvsPjxk0z7GEgu/a+K5Do3lFLB4jmUiixxLE4waSovL44RHn5xcAKKHP0rSwbJfA
      c1ksF8iKgiwJJFlmNpvhmKvokWjEW+WOA9jmkk5vxN7BIctJH9OTONirIEkbUZ4sHQ73K5x/
      +zUHT39FaM6YmT675SLd9hXFcoVe+4piZRcpDJEQ6IaO4/ospkNi6QLZVAIR+rRaVxTLu6ym
      Q2Q9QSqh0+uPNpJsrompMqEaQ7+WgsgBovi/dPybBHgpv5IkbYQXCRkIhbgW4s1jS1lRkITP
      eLKiWMzfBAoDD8cTxGP6z/pCQog7Ih1J8IdbgT72+Ddnhp5FtdFmMltQTsVYyAa/erjH//y/
      /CP/0//4PzCsn9JxNXzL5He/fsZquSCfzzIZ9XCFTikrMxiGxFQLyUhTzKVoNppUDg4ZdK4o
      VfZx1jNmKwddDslslQntJWtPIp8yGE+mJDN5/u1ffs+Dx59ztF/5RQooIuLHuEkARY+T0GAk
      ZCRFRyVk0G6ze3R0c3Dg+6iaxtmLF1QO9jm7qOJ4PluxkJlRBsDzfE7OvubezhaVo4f062eo
      W7ucn58T+g5bSQVROOKqXsd0PTKGYDWRiJfu0+lcUSzvRJU/4p1x06ZwzDW57QMSGoRAORuj
      OnLIGptDJElhZ3sLSd7IbqPVJR6Po2kqvi9QZYnANZmuXDKpBLIs4fs+YejTbDTRjTjxRALD
      0Ekk4siSxHw8YOWGqIpCKplElmUUBLbnbyR4HUlwxNvlOwcIA65aLZK5IgldQY8ZrFcmiiKT
      SCTwbAtJj+OZCxQjTrfdZmdnh6/+9CeOHz8jn47j+YL5ZIiaSJNPJ2i3O2xXdhn12qQL26iS
      QJVB0mJ4jkPoWczWHqVCGlmL4zkWmgyD6Yp0MoahKoSqEUnwB9yG/tjj33oK9FJ0FWXzrD4I
      AhRFZjOKR9z8VwiQJAj8AC8IiMcMRLh5LRQCWZIIQoGiyARBgBACRVEIwwAhJBRFQYQBQbj5
      rI14S5vxQa+89pJIgj/cCvSxx7915nwyYjydY3lg4CDpccqlLS7bY/TQ5OjJ53QuvmXiaSQl
      B1XTkeM5Hh5uc3He4NGjA56/qPHkwQ7/4f/+A//df/tf8/Uf/0AylQAty3LcJpVKI8czWNMe
      iXSeQjbBytM42Mnz9R+/IhaPIcdzHB/t/uzCiYj4KW7dUrPZLKvFDD2WoD8c4VgrrEBD8yeI
      WAFhTgmNHDFNQkawXq/RjRgAk2GX07NzLNen2+7x5WdHdEZLRBjieyGappHM5nn89Bmuudi8
      7gebnw0gdNao6S0eP/0MezV99yUR8UlyKwHmK5Onn/8KczEmncmxv1tiOh7hyWm81YjJfIlv
      L+l0B6zdgMePHjIdjwAolCo8efyIuK4wX62xnYDJsEsykyeuK2i6iggDVrMRKAbxVJYnTx5t
      Rnz6PkI1cJYzlvMxkhq/luBlJMERb5VbDuCYK7qDMZW9fZTQpTuas1PMECoxZN++7pUFy3ZQ
      pZDuYMr+wR6KBJblEI8ZmJYFkkwiHsM0TSRJJh43WCyWuNYKO1DYq5RxbItYPE4YeLSaLRLZ
      LTJxhf54wf5ehfVqhaEqCNVAiyT4rcSO4t8ZCiFuSfCPIYS4+fDNRJiAIBSbv185RghA+Dhe
      SDxmbF4PN8YsbcZYb0RZklB/4HMjCf5wK9DHHv9WjRJC8E//+//KyhN49ppqrUEQeNSqVVzP
      p3lZu56hJaidv6DZbGG5ASLw+OMfvqJ2dkKrO2K9XuNaK3rtGv/0f/2exWLGYDRnMuwxnCw4
      +eqf+ddvqwQCRt0WJxc1mq0OlrkmELBcLn9uuUREvBG3EmA5aPLot3/D1WWTs4saB3s7nJ2e
      sbt/QKt6Rqa0S/XsDBAM+iMca818ucI1J6SKhzx59pTleECn3WU+vCLQ0hwcHJHQVQJ3Tas/
      Y9C6JF3Y4t69eygS9KYLHh3tslwuGXXb2AE0mpfvpzQiPjleSQBBZ7wktE3WqzmyJOG6HrIi
      43oukiThuu71UxuJVCbD3l6Z+XyBFs+ynvWZjvroqSy+7zGbzZFkBc+zCcSmD2Ey7BEgoSgq
      lmUhBGTjGsOlC74LksBcLTBtn+l0ih1JcMRb5hUHEFiWTTwexzRNDE2mO5iyW9mm0+myU9ll
      2O9QKFUwNIXAc+gMJuzvboZKm6s506XDbmWbxWSEG0rk8nlmoz6pXAFZknHWc6xAYbuQodvr
      s1PZRUYw7HdBT1LIxOn1x+TyWcIwxFBlhBJJ8Ifchv7Y49+RYN9/s/+ZQgg8z0PTtI0EB9cS
      rH1fggWI4Ecl2A98QEZVIwn+Ph96BfrY439PgkP+0z/8b7ck2PddatXNqM9GvYZpX0vw2Qta
      V20sNyAMPP741VfULk5vJNi5keD//D0Jnn9PgpucVS9ptSMJjnj33JbgfouHv/lrWjcSXOH8
      7JzdgwOuqmfkyrtUz68leDDCMVfMlyu8lxL89MmNBC9eJ8G9Kf3m9yV4yfFhhcU8kuCId89t
      CZ4swbUxryXYcVwURcZxHCRZwnGcWxK8u3tbgifDlxLsMr2WYNe1NhIsSUxHfUJJQVFUTNO8
      keDBwoVgI8Hr5fyWBJuRBEe8RX5EghV6wymVnRLdTo9ypcKo3yVf2rmR4O5gwt61BFurBdOV
      Q2WnxGI6wgslsrk889GAZC5/LcEL7ECmVMjQ6w0oVyrICEaDHmgJ8pk4/cGEbC6DCEN0Vd70
      BMuRBL8tPvX4dybF+9dLHf7U8laB7+MHAZqmI8Td3uPAd3E9iMdfP0dYhCGu56GoGqry4xU7
      kuAPtwJ97PHv9AT/l//0j4xWHr5rU63W8Hyfeq2K5XhcNeos1jYAp8+/ptvp8PXzEybjMdZq
      RfuqyXxl4ZhLzk6+pT9e0e+0mC7WrFcr+v0+L7NtMWzyzXmDP3z1J4LA47Jex/VD5pMhV73h
      X/yFIiL+HG6ljrvsU3zwa4atS4ahw/GjR9TPz9i7f8zkqopaPKRRu+BXv/qCMAwx10tUPcNs
      NsOejIkfHNG7ahD4AUeHe7TbQ5ayQTCsooQ2xf1Htz7csS3imkbt7IRcucLZi29BjfH44RER
      Ee+CW78Azc4EQ/ZZm2sUWcJ2HGRFwbZtJEnGse2bO7geS/Lg4TGOuQBAklQSyc1cYCFCzNUK
      IUmM+l1k1SCWylIp5VlMp4QAksxupXzdh+DTbvdIpNOIMMD1vI0ErxaRBEe8VW45gHW9orNl
      WRi6Src3YqdSZtjrUtjeYT4ekMoViRsay9mEyXzF9k4FSQTIgBqL4do2sgiYLk3yuTzrxQSh
      xknENGIxg0ajxdHRIYHnEkoqoWeDojEe9imUdgjdNaYLMV1BVxWEqkcS/AG3oT/2+LcSIPB9
      JEVB/okVnsNgc5fWdQP5unJ6rkMoJHRdIwx/eEi1CEMc10VRVRRZBkm683mr9YpUMvXd50US
      /FZiR/FvOYDg7PkfkFO7PL5foXVZp1DeZzHuEs+W8M0ZQkuyvZWjc37GOhZnNV3wu9/8GkmC
      b/70B9LpDGq6RFITxHSd8WRKZf8Qaz5itvI4uLfPetTifOASrGY8+/wYIccwF1N8VPbKBZqN
      JpOVxW9/9fkvUDwRET/OTQKI0CeUU/jmjFZtRWbnCGvYJEjuEGNNfSVQrBbZQg5JUjm4d4+p
      +4Kr4QAVhcD3sRyPYkFjNuvj2Tb37t/j8rJGEMokQx8PQAhcZzNrzLeWWMJnODOJSwGX5oyt
      yhGWe/m+yiPiE+OmTTHpNJHiCVxzjS8p2JaFkBXc622RAtfBD8X1CQLLXDNcO+yWtqlsb5Hd
      KhHT5Jumj2bEiekaEoIw8Fmu15sPkmQqe4dkdLCvN/hLpZKo1xtyOI6F4/pMJpNIgiPeOjcO
      YNkW8VicwLPx0ZiPB2QKJcz5GCOVI7BXCDVONp3AsVb0R1O2yxVi+uZHxLZtDMNgvV7ftMkM
      Xcf1XIb9Hu3OkN/9V3+D7Nq0ewNSmTzZpEGITCgEhAGarjEYDElnc4gwwFBkwkiCP+g29Mce
      /05PsOd5qJr2kz3Bvu/heT6qpt9sevFahGA8GiAbSfKZ1A8eFvg+7vVnO7ZDKpW8eS+S4A+3
      An3s8e/0BH/1+3+iM7UIfJfqxcX1MOgqK9Om3bxkttxsjn1+8pzhcIhpO8wnQ1rdAeZyRr15
      he87dK6u6A4m+J7DfLkmmYgx7HVotNo0L+us12vWpsN6ucAPBc2zUzrDIZZt0+30fl6pRES8
      IbcSwDfHJCtPmHUbXJyds3d4SLt+Tq68x3rQhFSR1mUVACECLMvC91xavTHlrSy1yyuKKYWL
      Wo3ZWrCYDqheVNnd3eH8/Ixub4Y1G5MtZOn0h1w2LmletVFkCUSIZW22So2IeFfc7gluD0ka
      EmvLQlVkLMtCVhRM0wJJwr4ewgyg6nEODg5IJ+MQBtiOe12JHRRFvV7tWUKWwTRNZEUlHo+j
      G3Fiho6k6sRwQUsgAYoa49GTJ+QzCYBIgiPeCbccwLZtYrEYjmWhGjqD/oBSucx02CeTL7Ga
      j4mnCyRiGuvFjMl8SSa/hS75rF1BNqExWViUtrL4Pgjho2sq/f6IUnkb391seq3pKp4f0G9c
      kKwcs5XScW0HNWYgI3BsFz/w0RUZoeqokQS/ldhR/NesDu37IZr24wFf3S84vF4FGiDwbJxA
      IRH7bovTwPdwXA8jFtv0/G4C4Ac+i+WaQj4HCEa9DnqmSCZh3Pm8SII/3Ar0sce/VaMW/Rb/
      z79+s3lyM+jSHYxZzsY0rrpYqzm1yxahEIS+y2WzSeAuOa+2mI0HXHUHeNac0cxi1O8wnMwB
      qJ+f0R8N+frbEzzHpFZvEIiA6XSBFHrU6pesFlP+8PULROBzWa+xspyfVyoREW/I96ZErthP
      SyysFb2xzVYuxeVVj8r2FtV6i518jFpz84Sm125yflHF8z2uBhNUZ8pg6eI7S1q9Ge3LOgFA
      GLJarjCMGCcvTknHZarNDrPJgma7QyGlMbdl7h3dZzG4Iru9S7168V4KI+LT4yYBhAg3DpDO
      0G52CAMHx3GRRIhl20DI2jRR1U3zZmfvkEfHD1FlidD3sR0PVZaRJJnFdISsbWaCyVqMne0C
      AhCBS388J5WMAxCLJzbNLbFp4qiKgrleA/J3EuxEEhzx9nhlm9QAxw2J6SqW7RB6Ni4qCU1i
      YXrk0wbjucl2aQtEiOv56KqC4wUIz8byIZeO44cyjjnHDVW28hkcx0E3DKz1Ct3QGQzGbJe3
      CbwAIQl0VSYIN4vr6rrGaDAkWyjiufZmTrASSfCH3Ib+2ON/J8FCXA9x/ul9fh3HJggF8Vjs
      zp6+3ycMNoPkkon4G13QcrUinbrdYxxJ8IdbgT72+N81gUKX/+Mf/yNuKLDXC6r1Jq5jcnFR
      xfVcatULrOvmyMnzbxh0rri4bDEZDpjMV3Ram17ixXREvdHGuz7XstacnDynOxjjeza1ahXb
      Cxj1OzTbPRxrzaDfx7QdmvUaZ9XLn10oERFvyk0C9JqXfPGbz6g3+lRrTQ72dji/qHF4dEDt
      /ILK/gHVizNgMw7IdlxUOeD52SWyPWbqqNSr5zQaTXRDp99uESo6CEEinWc56PDirEplf5fq
      +QW+79M8f06326Y7c5h0m6S3d0m+8gg1IuJtcz26WTBdO0hCxlqNkSRYmxaqLLFer1FkmdVq
      BfJm0Fs6t8XTzz7nYKfI3t4+uqYxHvQw4kkODo8YtWro+QpxYdLuTzZrgwYhuiKxXq2RZEFv
      OGcrlySUVPb3d5EBy1xjOZvOsvF4jGMuWVru+yqbiE+AjQMIge04xGIxbNtGUyRG0yWlrRyD
      4YTt7SKjwYBCqYyqbFaIMwwDEQZ4foiuqUwnIxQjiSb5rJ2QfCbBcDSlVCoxGQ+Ip3IkYxqD
      4YhiaZv1YoqQVeIxA1nVUSTBaDgikc6QjMdYmyaGKhNIWrQ69Afchv7Y498ZDg3guS6KpiP/
      xJho33OxHY94PI7vbSbMJOJxXMfG8wNi8QSB54CsoGsqlmmhx2K4tkUoQNcNPHfzvqFrqKr6
      2i8USfCHW4E+9vh3zxSCF3/8z6R2v+BeOUX9ssnu4RHDdpPc9i6r6QA9maeYz3BxcU4qnaFa
      X0FgkctmcIhjzfsUS2VCz6LaHJAv5BD2EklPkEgmCa05J80hXxzv0+rN2KmUCVZjlGSByXTO
      50+Pf06ZRES8MXduqaG3hniZ1aTLxfkFe4dHDBpVUqU9xKqPJWfoXTUI2fQdrNcmmq4T+C7L
      5Zp43MD3XFarNfJ1k8h1fba2CsznMwQqOzs7bBVLpBIGlmVi2w57947507/+F+4/fPAeiiHi
      U+VOArRbHTK5FK5jI6sKy+UKRVVZrZYEyDjmiiAUSICsxXny5AmfPXlIMrtFOmEgIRFPptnb
      20UjpLR7gDWf4KFwdHRIv9d+5dMkiqUy28UCg3aDZ7/6ksv6JbCRYGs5Z30txRERb4M7DvBy
      SLTn2EiqzmQ0pFDcrPicyBRw1nPUWIpk3LiRYWDzb11nbZr4rsXKdCkUS5iLCVo8TcJQGI6m
      bJVK6IqE7froqky/30dSDbLp5M2iXC9XqNYUGaFoUU/wB9yG/tjj30kAEQa4foih/8TzeCGw
      bQvpuoJKioosbXZ3SafTtw71PAfb8UgkEt8NiX4N1mqJlkijfu+QSII/3Ar0sce/c2a/WaMx
      c/nbLz9j1O8QKHEMyWPlSeQTKsOZydHhHu5ywIvmnGI+TVpXSWwVGbebNDoj/urXz2h2Bhzd
      O0KVJS7Oz8lkstQbV9w/3ENXJDxkZqMRSixFKRun0eogBw6+nqBU3CaXTvysgomIeBNu31KF
      YLy0SAgXx5oxXAoKmRidwYydYo7LVpdSRuGyPUZP5FACE9v1WU1mzKdtHCVLPpPi5OSEdFzh
      9OyCi1qDMAxYrddoukGv12Ex6TEYjrB8jcV0wEW1xv7hITKCQmmHfqf1nooj4lPj9qoQoYPr
      C/KFFI32hMA1sWyPMPBYmzYiDFgu12iahu957OwdspiNAZBkGdtaszZNJBEynCzIF4ocPzhC
      NRI8efKUZ4/u47ku4/EEkIgn4siyhKbILJdLhKQQi8WQZCmS4Ih3wu0pkYGHG8roqozjuASe
      TSBp6HKI5QlSMZX52qFYyCFEyHg4JJbKYigSiq6zmI5RjATJmMZwNGGrWEK93mPspSyvl3Pc
      AJLJBJIkEwY+uqYwGk3JZDNo151jQRBEEsyH34b+2OPf2iPMcdybivpjBIGPaTkkk4mfXEn6
      TS7wdeL8KpEEf7gV6GOP/93iuCLkn//pP/BX/81/Tyw0abQHHB3t02o02T04pN9ukd/eJZuK
      8+Lbr8nltxBILKcDAjR812H/6Ihe65J4tkhMk1gtlpycveD+8Wdk4zJzK+RgZ4tG84qd/UN8
      c85k5eJZKzQZQkVn2G1TKO+STsR+kQKKiPgxbm6p826D/We/plVvcFG75N71MOi9wyP6jSrZ
      8j7Neg2AQi7LeDpHhAGztcNiOqKUj9EZLAiCgJMXJzSqpyixFMXtHe4d7NK6ukLXdWrVKpX9
      fWoXpzTbI/Z2SlirGS8umiz6l3hKnIuz8/dWIBGfFi/XKaE/t0jpKq6zQpElFoslqqawWCyQ
      FYXFYo6QJECgGUn2tnN0+0NisRhGLI6mKrirEStfI2ZoGMkM21tZdAlmyzX7+4d0G3VCWWY+
      nyMpGgif5coknsoSVwLcAMbDAalMhtFoFElwxFvn2gG+a/87to2mKYwmc4rFApPRiFyhyGI2
      JpkpYGgKtrlisXYoFvP4XgAIVGUzt3c5nxJLplAVCV03CHyX2cIkrss4gUQuk2Q8GpPbKhK6
      FkvLI52MoyoSri8wV3NiiQwQbhbGkjVe7qIaOUAU/5eO/9rh0I5toxmxnxwOHYabwXCJZGqz
      vufrLtC1cEP11mJZQgjM9QpVj72mx1ngeT6a9t3rkQR/uBXoY49/p0YJIXjxh9/TGiwIPIfq
      +TmW7VCvXrA0ba4adUazJQBnL56zWMyZL1cslyvWizmu73NZq7KyHNaLKafPv2E8t2g360zm
      KwAaF6cMp3Mm0xmL5YJep8NiNuGiWscPQmazxV/8hSIi/hzuJEBgz5DSe8wGLaoXVfaP7tFp
      VCnuHuJNrwgTRbqtSwCKW3lGowkg6PaGjDstaufnhEaS87NTGq0eR4d7rCdtxibUqxu5XTkB
      xUyC0XhCq14FLU4Y+JjTPs3+mNl09i7LIOIT5k4CtK76FIsZfNdF0xRm8zmKqjKfzwglhfVi
      TvCy0aToHOyV6Xb7uLbJeDJF1VTGw80uL2HgMZ3OkFWN+XREPJUBIKYIlk6I59io8RQ7pTxX
      7S6FrTziurmzkeBZJMERb5U7DvCy19ZzHGRdYzYaky1ssZxNSGbz2Ks5WjxN3NBwHYvZfM1W
      cQtzOSOUVFKp1HVlz6IIn7XtkkqlsVZzJC1OOhlHiJDJeEwskUZTZXRdx7HWWG5AMplAhOGt
      nuDrKcGRA0Txf/H4r5FggW1vJsj/GIvlkkw6DULg+RtpDTwb21dIxr8TWNexsWyXVDp1MxQ6
      8BxsH5Lx73qdPdfBtGxi8Tiu49zqGY4k+MOtQB97/LsSHAb8/v/8jyycEMdccn5Rw3UdLs7P
      MW2bWvWCxdqm2ahTvajiBgGz+WIjvC++YTQ36V41GE03IlutnmOaS56fnDMZ9mhe9fCcNYPB
      kOXaZjWf4YeCdrXKwrLwA59ed/CXl0hExJ/BnQSYdRvsPv2CZr1Btd7Y9AhfVDm4d4/OZY3t
      vUMa9SpCSFTKGTrtMdPpnEarx73DPdzFkM7UoV7brPAcBj6LxRJdleiOl8TEisHMRlYUmo0G
      rU4XRZYQYcB8Psf1gndeCBGfLt9LAEF/YZOLG/jXPcKz+Xwjw9MZsiwznU5BUtBjseuVnTct
      qDD0mExmoGqY8wnx5KYJo8WSPHnylMcP7xO4Nsu1ja7JSLJGXHZBT752i6TRaIS1iCQ44u3y
      PQd4pUfYcdBUmclsSaGQYzqekM0XWM4mpLIFROijqQp+IBBCIAmfleWSSqWwzSVC1smkEriu
      e7PgrmOtsX1IJ2MEgeCqdkJ2/zGFpL5Zi0jXkRG4rhdJ8DUfehv6Y4//2p5g17GRNeNmHP6b
      4Do2jhei4qMmMmg/VVdFyGJlkknfXgnadRw0w7i1T3EkwR9uBfrY47/mTEH17Bvk5A6P7+1w
      Wb9ka2efxahLLLNFYM0JlDiFlE6rM+Do/gOU0Oab5xdUdspgz0nsJpi06mRKFSTPZDpfYuga
      sVQOyTOZLS0O7x0yG/dxvIBSIQuAtZzxb3865d/9/b973YVFRPzi3H0KFHjYvsZ6MaZRu6C4
      d0gwaxMkiqR1n8lKYE+6VFudm11gzGmfwv5DKpUyMpsnSUEYcnpySq83pJjRcaQk42GX/nDM
      3naGWv2S/miO+sou8/F0jp1S4Z19+YiIOwkwbDfJbu+giQCh6EwnU0JZxZxPsdwQ115hugHl
      chnJXdAbLojnSkzbdYbDESGwGnfw1BS6pqJpOqqqYug6krTZCWYynRNPptmvbFOvNxiNRgg2
      zajVasVqtWY4HGItZqwiCY54i9xxgJfSGvougaSyXkxJpHM45hLVSCB8h1DSiDekkAIAAB1z
      SURBVGsy08WKQqGALG0Ed+0EZJIxJEVlMZsRT6aQJVAVmVDIhKHP+ekpuwdH5LJpFrMpRiLF
      eDRib28Xx1ozX65R9RjxmI4mS5EEf+Bt6I89/p0E8D2XEAVdU37onNsIwWIxR1J10smfXsvn
      ZYIJEbJcLIknk1imRSxm/OD2TJEEf7gV6GOPf+fMeu0CT2g8e/KQq0adZL6MsxwjxzIogYXp
      y+yWstQvr9g9vEdSE1zUG2R0WG4fYU6HlHb3cVcz5iube/eO6HeaGKkCuiJYLlZU9veonb7A
      SBdAUej3BuTyGRKGSn80ZWu7Qjb1ZnuKRUT8HG4lgBCCtWnjhzbT9iVytkIsnDIMEtxP61zU
      hhRiARe1Jb6i3EyYMddLNClJToZVGHB2dk7CUHiwv8Ppi6+xRZygf05cCancf4oEWIHgeK8C
      BPSB2WyCIwm29h7QrtfIfvb0nRdGxKfHrTaFPeuipYpsJVSmnsxyOsYJZJz1HNNy8V2bxdoh
      XyqR1UKanT4ApZ19fvXlb7EnfYx0drN3cOAznkxJpjJYyxmpdJZYKkMxl0YCDEnQ7Q9Zrqzv
      LkAIFvMZkqoxHA4xIwmOeMvccgDfdZE1HYkAzxM49gotliR0LYRioOLjhhLJmM50NieXL6BI
      4Po+uqYhwoDpfEkqmeDs7IT9g/tksynWiwUoOoauoF0/OhUiZDqZkspkkYQASdBv1CCzTaWY
      x3MdVFlGKGokwR9wG/pjj/8aCXYIUf8sCZ7PZ0iqTiaVvHnZ9Tx07YdXmBYiZDFfkEilbiRY
      lkBW727NFEnwh1uBPvb4r5Hg6i0JTuS2cVeT70lwhvpl+0aCq5dNsobEqniIORtSquzjrqfX
      EnyPfruJni5gKCHLxfpGgmOZApKqfifBukp/3KKwvUsukuCId8AdCV6trWsJriPnKsTFlHGQ
      4H7a4PxVCZbvSnBWhWUYcHZ+TsJQebBf5vT5nzYSPLgtwXYgON59jQTvP6Rdq5KLJDjiHXBH
      gvXMNqWUytRTWE42EmyvZ6wsB8+1mF9LcEb/AQlOXUuw720kOJ3FWs3vSLAuCbr9AYvvSfB8
      OnlFgqes7EiCI94ePyzBvsC11qixBKFrg6qjiGAjwXGN2WxBNpdHkbiZEinCgNliSTKRoF6v
      Uq7sk82kMJcLhKJjaOrNej9ChMymM5LpDBKbSxi3G4TJAuWtawlWZIQcSfCH3Ib+2OPfSoBO
      q0lp/xDtDUdBO6sptasB+a3Sawex9Xt9yjvlzR8ioHp+AVqcw71tvFC5tVjWjxFJ8IdbgT72
      +LdWh54M21hSgmI8oD2YsrtTpt3tUqlU6HU6JDJ5NOGwtAWPHz/AnA0oHT6mU/0aKXApFQv0
      hmOWswmJXIlpp8V0Oqa8f598UiaQYxRjAc3ehHw6Re3sBEnVOagUuOqN2D96QCbx08uzR0T8
      UtzcUlfDJjM/zqDTpDOY8tmzp/T7PZ49+wxvMmDn+Bnmckbg+4RhgBCbpKldnJFI5VgsFojA
      Z75Y4PseYRgST2U5vn/AdDoBYNhr05/ZFJIKpmmhJ7LkDYm1G+D7ISK8MzcnIuKtcpMAw2XA
      3//tb9jOp8mkDF6cnJLNZHj+4gVyKk3j5DlC1tANA89c4ASgaAbHj55wfP8QVQ45r9YQsk4s
      FmO5WKBqKkgymqoAErsHRzx79oyYrqKoCpqmomgaqqajK4L5fEq9cQVAq9ViOR4wM533VTYR
      nwCvnRL5vtgspKuQiN0eFRo5wIfbhv7Y49+qUcvZ+GYB2zdBCEGndUm90cYxl6xt//UX6awZ
      TX58wdt28xKhxFCFzVV3+MbXEBHxc3gldQTdwYggFOSS9zk9vaBQrjAf9kjmS7irCZYvcbBT
      oNkdsX94j6Tm0Z/YfPZkh279G67MOL8+3qPT6bC1s8foqkkoq9w72mFtuszHHXzJoJgxGEyW
      3HvwkLi+uYTRoEOgZwiWPaamYL9Sek9FEvEp8cpToIB+t4sXyuR1ie2Hz0hZHVb5AypFjYvl
      it2MT2diEwQBIgxRtBS7pQTffHvCvd08h9sVAncBkqDT7ZHQk+xs6QwmJsJzueoOMGSZWOyI
      IAgIX5HeeKaIvRghSQqGEi2OFfFuuGkCrYddHv/u3/N3vznG0jK0zp4z93VWvRq98RLXmtMY
      mGznk+iqxHy5QvgOk/kaRZYxklmGrTrTxRJJktE1jfGwS70zoZhPYsSTbOWyFMoVUjEdWfjM
      Z2Oa7U1vsqbp6LjEskU0XY8kOOKd8BYlOOCy1uHeg4MfPMIxVwgtQewnFhGKJPjDlciPPf4r
      NUrQbDQI/4yTh70rvvn6G5rtLr1e/3vvKncqf6/Xu/m3a62oXTaoXlxgR+uBRrwnvnOA0GPU
      aSAlt0gEcwbTNTvlAt3ukMrONp1un3R+C+wFNjqPHxxR2tmnP5xzuFfmX37/e8ajEQcHO/hK
      GnM2IPRsTMvGEwqJZApz2mc6GVM+uE8hnaKST7LUS4T2kpOLDls7B6wnXYSW5P7h3vssl4hP
      hO86wppV/MQW3WaNwXTBs6eP6feGPPvsGZPhkONnz1jNxgSBT+AHfL/dlNva5qAUZzRdsHYC
      ZtM5jh/w4N4+mewWgWsTS2Z4+uQh/U7v1rm2bYEs6NRr2FI8qvwR74ybfYJXocHffvk5hXSc
      VEzj5PScbDbFixcnpNIpTp6/QNbj6EYMe7XiZaNFv97lUdM0ZEXDiCUYtKqsbBdN05EkGVVV
      NqNAA5cXL84plIqbD1dUFFlivVojSTJGMoMwZ1y2OpEER7wTPqie4B8ikuAPVyI/9vi3apQQ
      gkaj8cYnh4HNybcvqF62+KFxbEKEtBo1rm7t+hIyncxABEyn0ZaoEe+PW6njLoc0m122dg+Y
      dy5Z+zIGHpZt4Uk6yWSKuOIznZs8ePIUxbeIpUr4iyazdYFu45JkpoAcesR0hWypwqJbR0qW
      2Mkl6PV6FLJx+sM5z5+f8asvHvH18xp/8ze/pde5IpktooYWCzvk2eOH76tMIj4hbv0C1C6v
      KOQNatUmC8vj8cN7uD4c36+QzJTxXZPGZQMCk25/BgiuGjWWnmDSbLL/6DPM5ZRMLOS0OcZQ
      ZVZLm1w+jaqqLBZLAs/CFRr7ewfsVsrs7R8gzBFzW9DptJlM5zx6eP89FUfEp8ZNAgghMFI5
      Pv/8NyRUH00KOK810HQNJAXtWmTL5TKykaZUSG2GOmsKkhBkt4vUT75FUg3GS4+DYpy1G7B3
      b5+Lb76m3uoghS61yzaKqhP6a6Yrl8CeE+ppEhpUKhXSmSyqIkcSHPFOiCT4ZxJJ8Mcd//Zw
      6OmI8ezNh0MPulecnp6xWNt/8QV8n26v99MHRUT8QtweDj0cb4ZDJw45Ob+kVN6m17oilMBQ
      FXbvH9OuV0lkt7h3UGG+NHn86AHfPj9jK5tgujTZ29/jqnlFqbKHNRuw9iQK6QTZQpbG1YBM
      wkCVBaPpgt2DI4adJoGkcW9/m9plm7XrU9nZeX8lEvFJ8YoDbIZD97oDri6bHD59RjGXIJnZ
      IhlP8nC/wGX1jIkt6HY6ADjmkn/+f/+ZYmWP+drmyfERV1dt/MAn8Gwur7pY8wG273J61sD2
      A5arFeP5imdPH9I4e4ESz5MzAp6fXfHg6VMyyR/foT4i4pfku+HQoy5Pfvf3/N1vjgmMFLXn
      zxnP12iaiqZrSLJKrrRLSoOdyuYOnc5t8de/+5LRcIAuC07OqpRK2xiGwcq02SkWSOW3qexU
      WJtr9lIyxDIkdYUXL84pHdxjPe0zmHscVXKcn5xiu5s+5kiCI94FkQT/TCIJ/rjjv7ZGXTUu
      8d54XHRI/fyUs4safvBdLrnmjPHc+sGzfNfkxfMX1JvtP+d6IyJ+Ue6kjhAB80kPR05STAja
      gzGZWJyF5+BaDqoe42gnT7MzoLx3RDEXxw9V9stxGq0eiYSG7NjEMiqmBeNuDUlPkYwpLGZL
      jp8+Q5U38wHShQr7OznmkyHt7oDK/gHdqyb5UoXK9tb7KI+IT4w7vwCLQZO5H2fQa9EZTHj2
      7BmS63H06JhEIomuQr1eR1VlOu2NDI8HHf7lTxfs7uRYrNasZnMCwLVm9AYLBt0u4+mUe8eP
      UL/TblqXNRpXXSzLQgpdesMJQRDgB3/OtJyIiL+cOwkwWQv+7m++pJzPkM8meHFygoeMDOi6
      jq7rVCoVglBi53rdz8r+PZ49PGQ0WWAvJgymcxRZJZ7Mks8l2N7ZIZnKENNVmvUqXgiSrGy2
      Tw1DzPUaWVHRNJWYEWO9WkUSHPFOeOcSvFwuSafTf9Y5kQR/uBL5sce/NRaoXr984xPDwOXk
      +bfUGle3ZoeNO13cHzlPCkJ8YD6Z4PoOpvXd0YtJn5UTzQ+OeHfcpE5gTelcdchVDnBGV8xM
      n5ga4jgOjq+QSCVJ64LxbMXR8VMMyUVP5NGcMaNZGkloWMsxkmWj2SvOLhrktrbxrSmuMHj8
      8AiAaX9AKZdl2O5Sjh/i2IJuq4bleOQyBv2rCYVcJpoWGfFOuPkFqNeaZLfSNC5qzJYWTx8/
      xPMFx8cHJJNbBL7DZbOJhEevNwIEV7UTGlOflGyztj0W8zkA/UYdF4Vut8t8aXL84PDmA4PA
      4eL0lHZ/SOi7LKdjhJEhnzQIJIX7Dx/h2eY7L4iIT5NNAgiBmszyxbMvSMVk4rrM6XkNVddB
      ktE1BV3X2SmXkZQ4pVIWSVJ48OQL9goGS0di3G2wtFxUXadYqaCKkJ2dHTK5PLIE1WoVACOe
      5tGTJ9w73EeWFWLJNNZsyFV3gKLqKLKErut0Wy3WyzHDWZQMEW+PdyLBQgSs1jbpV7ZR/e7N
      gHqtxmLt8sWvPr/ZDulVIgn+cCXyY49/e05w6FJvvHnPbODZnJ+d0R1OfvQ4SVJIp5JMxq85
      TlIwEim+/PXnjLpNTk9PGc+Wb3wNERE/h1upM2g1GUwdjg53aVTPQE/hW3Ns20ExEqTSOYSz
      YGWHPH32hN5ljUTpkK2kQadZZ7q0ODyoUK212C5mGUzWHB1W6Pd6pLIFTr/+iqe//t31StMy
      9w/L1C/brB2P3UqFxdri+MER35xU2cp9/r7KJOIT4tbSiO3BCMOZ0BxMcQOV+4d7CFnloJig
      ePAIZzmj2WrjrUaMVx67Dx/jTbqcVS9pNJvgm3S6fWLZMgnFI7tzgBr6CGQGgwE7lT32imma
      7T7mfMjZeXszBPp6U2x7veT8oo4Rf01TKSLiLXBrefR8aZd7R/vUapcIf81lq4Ou6ygaKDLo
      sTg72yVCWSMbU1jOx9heiKpq7OyUcXyJ0lYWhyQKHpl4HHs2RUgShmEQVwKuRgt2innQYhSz
      Sc5fnCCkTR7qug6yRCgErVaLXMIgiGfJvOFukhERfy7RcOifSSTBH3f8OzWqf3XJ2n3TwWiC
      QfeKs/Mq6/mI0fIvGbcTcHFywtl5FS/44HMx4v9n3EodIQTT+ZSZLbO7FafVHbGVjdOfuwSO
      iawaPDoqU211KW7vUtlK02gP+M2Xv8KZdzm57FIuZMjFZQaTBQf3HjLqNglkg4Qhs5ivSCQM
      bDfk4fHx9cjQECHFePzoHr5jcnreJJEpcLC7/X5KJOKT4tYvgLvoM5gHDIc92r0xzz57RgyH
      naNHpJJJMobK+eUlqqrS63VBVnh6fMi3f/qKpRNyeP8heC6XjRYyIe1OG8fx6fd7LGYz7j96
      jCptfrbCV1peo36b84sqpmkRINHrRytDRLwbbiVAb2Lx93/319zb2SKTS/PixQlWIG8E2NDR
      DZ393V2CIGSnXEaEgsFgiKrpKKqGpsjohk5lp4ykaBRzKWwvIBaLEU9liGmbxbVC32Ey6NCf
      bJZg0Q0dIcCxTUIBhmFEw6Ej3gnvTYLXqxXxZBJZek3X7/eIJPjDlciPPf7dCTHDDtPlmy90
      NRn2OD07Z7VaMhhO3/i8ZCp1XfkF/U6Ls4sqXjQTLOIdczt1hGA0mROKFYmDMueXbXa28zSv
      xoCHrijcO35IvVonWyhxuLfNZeOKL778ktBbc3F2ymhSZG8rzVV/RHnvEHM6YOUKtlMxuosF
      2UQC03Z58PAYXZUh9Gl1Rnz55ReEzppvag2yW9scVCIJjnj73EqA0Dfp9saEkoxEyLPPniGs
      EYvSHp41opwIqZ3XcRWVfr/H4V6ZZ08fc/r8a/KlHSr7R3juksvGJbFkmm67gy4HjIYzjDDL
      wf3HOOMOS98neLmhgKzx5PiAb/70RwxNxpUS9Hu9KAEi3gm3mkCj3pC/+vd/z28f7RFPZ3n+
      /AXztYeuKRi6jqIZbO/toomAcrkMCAb9PoqmoSoquq5hGAa7uxUCIVPe3sJ2HGKxGLF4inhM
      Q9U0CH3mkwFX/QmEPr3BCE3TKVb20KSAcnknkuCId8J7k2BrvUaLJ1DlSIJ/jA9dIj/2+Lcf
      g7bqb9wLHIYe5ycv+NPX39ysDu07Fpbrv9H58WTyTuX37DVnp6f0R28u0xERP4dXBsMJZss5
      c+eK/WKCy86Qcj5Ja2wiPAtV1jk+3qNab1MoltnbKXL//h4XjSmaN+ff/ljlaLdAqKU5e3FB
      EITEDZ3t3QOumnWCICSma+we3afdqJPIbKGGJksHPntyDED7sk6ucp980nhvBRLxaXHzC+Au
      +gxmPsNhj1ZvyGfPnpHQAop7D0inEmzFdM7rl0iaSn9wu6fWs1fkdg6JywGm7ZLMFkink9w/
      2mE+mZPJl0inUhztFWnXq8xtQb/fY74wefLou73ADh89ZT1sc15rvrsSiPikuUmA/vS7XuB8
      PsfzFyesXdCUzVBmzTDY29tF+CHl7c3q0JIkYxg6ihYjk4wjqxq6pqLrOoZhIMsqhq7fyLGs
      aORLFVK6RLlcJpPNosgSFxcXCGA+HeP4IZqqRhIc8U54/8OhRchqbZF63XzhayIJ/nAl8mOP
      f6dG+eacRmd083f7ejOMH2M8Hv3o+6vZeLOV0mJBf/S9ecGS/KOVPyLibXIndZrtPmsvQFS2
      uDh9ztVwjvB9Kgf7dNtdQs/e9OwmdQamRSL2/7V3p11tYwcAhl9JthbLG8Y2O84CZJtkpqft
      aXva397T/oLpnJlMcABjAwbvYFuydqkfTEicBCazxJATvd/gw7XRkTAPuro3zeHeSx4+fkFC
      CFlMJ+mYIRe9HivrGxTzaWqNU755/gzfHtMf2hzXa4zsgNUFhebAwrNtErLKUl6lN7bRM3kq
      a0u3cTzivrI+2Cm+220z7rbojwYISonV5RILusj+6z3CRArLsmh1Ojimw73tHTzHoLy0wuba
      MoZpEDgWEzcgigI834coQJSSiKKIIAgQBUwsm2Grg+FYbNzfIq2n0ZMitu1Q2drBMYa3dTzi
      vrJmLwDPZLnyhL//6x+MBgbWsMngYkyqsMqgP2CtlMZ2XDRVJakqiIKAoqhkdZVGswWBy+FJ
      GzkxXUjLtiwQE6Q1kd3dKobtIyckHNdF0VSSsoooCiiKjKwohIHL/usqip6NERw3l24fwe/U
      OWmQWamgSbPfjxF8dxH5pY//9oyKIg4ODq5Weo7CgLPW2c0vbo05N67/DT3stdmtVumdf9pC
      V+X1D0/+uLjP2dWlE/oTLjotThdWUdwB3YsRYRjghwnEwCad1jg9a1Ne3aTZ2AdRoZjy2e2E
      PF4tsVhZpd04xncnBFKK7QebjPojKo8eoQUuP/zwPcWlDVxzgBslUaUA23awvAhV0ynoEp3B
      mM0HW2RT8Z3guPl09QnQPKwhZgucHR3QHxk82t5GUVSMYQ9jYmFNTASg02mhpPMU5CRqfoGN
      yn1Ce0JAxHg8RhQFPM8jBMLQZb9aZXAxgqTO8mIa2/ZodzrYfsTW/U3S+UWkyOPo6ISEEND6
      hWUW4+L+yC4/ASICOcOfdirUaockxZC9/QMSagpdCBC0As5kgCBKyIqCJElT6Oo5xkcNsqU8
      td09AkQSiSSeYREBairDcmUTxXcY2z5R6ON6AZqmoioKgiihyAmiSGFlZZmx5VLMyNTqTZJS
      GC+MFffZu1MIBvBci1CQUZJvMRAj+O4i8ksffwbBb+bkwCWCz+aLYICkrM2c/HFxn7MZBA97
      bU4La+8hWEIMnRkEn9T3EUSFov4rEPy/7ykuX4fgFAt6gm6M4Lg5N4NgKfMGweZbBI/6UwSb
      bxGsZvIUlBsQ7LofIlieItj6KIJ9jmMEx91CMwj+7hLBshhdIlj/AMHTac2zCM69h2Df/BiC
      A6LQx/MDNE27QrAqJwlRWV1dZjSZIvig3kSOERw3h+4ggm1CIRkj+LK7jsgvffwPEPymMHQ4
      O+ve/OK/gODx4BwfCH0H8505PZNhl3Nzuj9wv9fjzVPIZyd1aocNRmPj1/8kcXG/obf7BDsj
      zjtd2uVNBKPFYDQkihT8MEIIHTKXCC6tbNCs7yEkU5Q0j1edkMerRRYra7QaRwTuhEDS2X6w
      yUW3R6KwQML3MCfedD9g26VcynHYarOYT9OuH7C89ZitzTUMy+Hh/U1eVg8pFXK3eVzivpKu
      PgEatQbqQo5m/YALw2JnewtZniLYnFhM3kFwKlcgIydIXyHYIiDCGBuIoniF4DdFgYcxvAAl
      QzGjEQgilQdb4Hkslpe5d7kptm2O2a81UDVtzoch7mvtap9gMZXl+ZMn5NMKakJkb/8QSVbQ
      VZFUtoDrulO0qtO7uIqqktTzjNtHyGl1FsGuSwQkkgK1ahXDCdDSGZzxgOPT6X7AsiSiqAqF
      nE79cmdKVVWZrpUrxNOh4+bS/BAchdQPp/sBP/vm6Uf3A76uGMF3F5Ff+vgzCN7b27v68tMQ
      PPp0BFse9x5s8eL5U+zR9QiuVqt0BvETYXHz6R0ED7no9WgvbYLR5vwSwV4YIb6H4JNLBJd/
      NYIPsCyPcnmK4EIuTafxEQS/PqQcIzhuDr2D4CPUfI7mYY3hOwg2P4JgPVcgew2CJVHEvRbB
      WYrZtwgW/I8g+LCBqsYIjptPVwiW9NwUwZn3ESyh34TgzjsIFkSkRJLgDYLlWQS7VwhWkCUR
      VVMp5N9DMIAgxgiOm0sxgn9nMYK/7PE/OKNOG/sYzps/YCKaJzcvjBWFPr3+9RPYPHvMTy9f
      UTs+I6FovHg+e/L7rsn50PxNbz4u7vf2wT7BY9NkfHTMWjHFUauH40b4gU8hlcCSdAadU/Rs
      EfPijDCEfKHIjz/v8pfvnhKIWaxRh6QYMbY87m/t4Nsm+dI6k06DEQHmeISeL2JddHECKGQk
      qvUh3z6rcHrWJ51f4N76ym0dj7ivrJlPAGfYojPy6fbanHYHPHn8iLQqY01MTgdj5NAGBLqd
      NmJS5WFlGSdIsL6+gS4L2I6PMTZIJBJ4nocfBBCFHB0eIKVzaEqKnUdbTHodQjnNRjGNFchs
      VCoMuxdsP3uCNYr3BoibXzMXQGfo8s+//Zn7qyXSGZ1X1Sls10tZHEHF8zwQhOl0ZlVFlBKo
      qkLoGEx8iUG7gen6iJKESIjnh4gJha2dHR7e20BTVQRBQMvkwR5x1BmxuryEcd4iU8jy+uUr
      ZH36788YwXHz6M5Nh/5YMYLvLiK/9PHfO6Mianuv8d8+GMzJ6c3PBYe+Q/+GO7eebVLd3aXZ
      7tHtXn9nuX/WxA4+9W3Hxf0xzSI49JmMzzlq9llQXFq9C9wwIvBDFDFAzWRonZ6RL6/QO64T
      CRLlpTw//tzg26f3kDIrjLpNCBycMMn29n1aR3XS5U1Wchr//c+/efj4Barg0ekPWVsr0zjp
      oWoaGclDNEfsNY7IFopU1pZv65jEfUXNbpN6UsMSM3Rbx3QHYx4/2kFVFCbmiKFp4U4MBAHa
      nS6KlmV9USFS8qxvbKIIPk4QMTYuEezahCGsbz8hGnX4qVqjtLzC5toShmniWiP6FyZLaxWE
      yAOgc1rHExL0ezfvNxAX90c1cwFMIpW/fveUpcUcWV2hurePICYppFWSeg7f8xAEcbqwlaYi
      KRqKrOIYA3xJo93Yww0iJEmC0CeIYHTew7A9NE1lIZ2iftLC8zySikpSimjU9hETKrKisbSy
      QZKAUqkcIzhuLt0qgifDHhN0irmb5/7ECL67iPzSx/8/UQqtlCAO2yIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='135' name='产品销量动态数据集' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='分层结构' width='192'>
      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
      pUlHe5cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='创建及其编辑组别' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='右键创造层级（条形图）' width='192'>
      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
      uwUF7AD/PzH0ThlN2RcvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='各区域用电量分组的使用' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='合并集' width='192'>
      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
      P7w50AxJL1IMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='地图分组' width='192'>
      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
      D2HlakM95dwMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='拖放创建层级（折线图）' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='电量销售区域标靶图' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='负利润国家静态数据集' width='192'>
      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
      wlzXPbD9/wPR1cqeMDfGYAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
